"""
1. Пользователь вводит месяц в виде целого числа от 1 до 12.
Сообщить к какому времени года относится месяц (зима, весна, лето, осень).
Напишите два варианта решения: через list и через dict.

Пример:
Введите номер месяца: 10
Результат через список: Осень
Результат через словарь: Осень
"""

# Через список:

month_num=int(input("введите номер месяца: "))
seasons=['зима','весна','лето','осень']
index=(month_num-1)//3
print("результат через список: {}".format(seasons[index]))

# Через словарь:

month_num=int(input("введите номер месяца: "))
season_dict={1:'зима',2:'зима',3:'весна',4:'весна',5:'весна',6:'лето',7:'лето',8:'лето',9:'осень',10:'осень',11:'осень',12:'зима'}
print("результат через словарь: {}".format(season_dict[month_num]))

"""
2. Пользователь вводит строку из нескольких слов,
разделённых пробелами. Вывести каждое слово с новой строки.
Строки необходимо пронумеровать. Если слово длинное,
выводить только первые 10 букв в слове.

Пример:
Введите слова через пробел: раз два три
1. раз
2. два
3. три

Введите слова через пробел: раз перерефрижерированность
1. раз
2. перерефриж
"""

user_string = input('Введите слова через пробел: ')

words = user_string.split()

for i, word in enumerate(words, 1):
    if len(word) > 10:
        print(f'{i}. {word[:10]}')
    else:
        print(f'{i}. {word}')

"""
3. Реализовать структуру «Рейтинг», представляющую собой не
возрастающий набор натуральных чисел
(каждый элемент ряда меньше или равен предыдущему).

У пользователя необходимо запрашивать новый элемент рейтинга.
Если в рейтинге существуют элементы с одинаковыми значениями,
то новый элемент с тем же значением должен разместиться после них.

Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
Пользователь ввел число 3. Результат: 7, 5, 3, 3, 3, 2.
Пользователь ввел число 8. Результат: 8, 7, 5, 3, 3, 2.
Пользователь ввел число 1. Результат: 7, 5, 3, 3, 2, 1.

Набор натуральных чисел можно задать непосредственно в коде,
например, my_list = [7, 5, 3, 3, 2].
"""

my_list = [7, 5, 3, 3, 2]
new_element = int(input('Введите новый элемент рейтинга: '))

for i in range(len(my_list)):
    if my_list[i] <= new_element:
        my_list.insert(i, new_element)
        break
    elif i == len(my_list) - 1:
        my_list.append(new_element)

print(f'Результат: {my_list}')

"""
4. *Реализовать структуру данных «Товары». Она должна представлять собой список кортежей.
Каждый кортеж хранит информацию об отдельном товаре.
В кортеже должно быть два элемента — номер товара и словарь с параметрами
(характеристиками товара: название, цена, количество, единица измерения).
Структуру нужно сформировать программно, т.е. запрашивать все данные у пользователя.

Пример готовой структуры:
[
(1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
(2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}),
(3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
]

Далее необходимо собрать аналитику о товарах. Реализовать словарь,
в котором каждый ключ — характеристика товара, например название,
а значение — список значений-характеристик, например список названий товаров.

Пример:

{
“названия”: [“компьютер”, “принтер”, “сканер”],
“цены”: [20000, 6000, 2000],
“количества”: [5, 2, 7],
“ед”: [“шт.”]
}
"""

goods = []

# Запрос данных о товарах у пользователя
while True:
    item_number = input('Введите номер товара: ')
    item_name = input('Введите название товара: ')
    item_price = int(input('Введите цену товара: '))
    item_quantity = int(input('Введите количество товара: '))
    item_unit = input('Введите единицу измерения товара: ')

    goods.append((item_number, {
        'название': item_name,
        'цена': item_price,
        'количество': item_quantity,
        'ед': item_unit
    }))

    if input('Закончить добавление товаров? (y/n)') == 'y':
        break

# Пример готовой структуры
print(goods)

# Аналитика по товарам
goods_analytics = {
    'названия': [item[1]['название'] for item in goods],
    'цены': [item[1]['цена'] for item in goods],
    'количества': [item[1]['количество'] for item in goods],
    'ед': [item[1]['ед'] for item in goods]
}

print(goods_analytics)
